/*
 * Copyright (C) 2014-2015 Freescale Semiconductor, Inc.
 *
 * SPDX-License-Identifier:	GPL-2.0+
 *
 * Refer docs/README.imxmage for more details about how-to configure
 * and create imximage boot image
 *
 * The syntax is taken as close as possible with the kwbimage
 */

#define __ASSEMBLY__
#include <config.h>
/* image version */

IMAGE_VERSION 2

/*
 * Boot Device : one of
 * spi, sd (the board has no nand neither onenand)
 */

BOOT_FROM	sd
#ifdef CONFIG_USE_PLUGIN
/*PLUGIN    plugin-binary-file    IRAM_FREE_START_ADDR*/
PLUGIN board/freescale/mx6sabresd/plugin.bin 0x00907000
#else

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */
//DDR IO TYPE:			
DATA 4, 0x020e0798, 0x000C0000	// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE 
DATA 4, 0x020e0758, 0x00000000	// IOMUXC_SW_PAD_CTL_GRP_DDRPKE 

//CLOCK:			
DATA 4, 0x020e0588, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
DATA 4, 0x020e0594, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_1

//ADDRESS:			
DATA 4, 0x020e056c, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4, 0x020e0578, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4, 0x020e074c, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_ADDDS 

DATA 4, 0x020e0534, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR02 EB828
DATA 4, 0x020e0538, 0x00008000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR03 EB828
DATA 4, 0x020e053C, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR04 EB828
DATA 4, 0x020e0540, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR05 EB828
DATA 4, 0x020e0544, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR06 EB828
DATA 4, 0x020e0548, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR07 EB828
DATA 4, 0x020e054C, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR08 EB828
DATA 4, 0x020e0550, 0x00018200	// IOMUXC_SW_PAD_CTL_PAD_DRAM_ADDR09 EB828

//CONTROL:			
DATA 4, 0x020e057c, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET
			
DATA 4, 0x020e058c, 0x00000000	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4, 0x020e059c, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4, 0x020e05a0, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4, 0x020e078c, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_CTLDS 

//DATA STROBE:			
DATA 4, 0x020e0750, 0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL 
			
DATA 4, 0x020e05a8, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0 
DATA 4, 0x020e05b0, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1 
DATA 4, 0x020e0524, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS2 
DATA 4, 0x020e051c, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS3 
DATA 4, 0x020e0518, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS4 
DATA 4, 0x020e050c, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS5 
DATA 4, 0x020e05b8, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS6 
DATA 4, 0x020e05c0, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS7 

//DATA:			
DATA 4, 0x020e0774, 0x00020000	// IOMUXC_SW_PAD_CTL_GRP_DDRMODE
			
DATA 4, 0x020e0784, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B0DS 
DATA 4, 0x020e0788, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B1DS 
DATA 4, 0x020e0794, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B2DS 
DATA 4, 0x020e079c, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B3DS 
DATA 4, 0x020e07a0, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B4DS 
DATA 4, 0x020e07a4, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B5DS 
DATA 4, 0x020e07a8, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B6DS 
DATA 4, 0x020e0748, 0x00000030	// IOMUXC_SW_PAD_CTL_GRP_B7DS 
			
DATA 4, 0x020e05ac, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4, 0x020e05b4, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4, 0x020e0528, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM2
DATA 4, 0x020e0520, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM3
DATA 4, 0x020e0514, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM4
DATA 4, 0x020e0510, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM5
DATA 4, 0x020e05bc, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM6
DATA 4, 0x020e05c4, 0x00000030	// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM7

//=============================================================================			
// DDR Controller Registers			
//=============================================================================			
// Manufacturer:	SAMSUNG		
// Device Part Number:	K4B4G1646E-BYMA		
// Clock Freq.: 	533MHz		
// Density per CS in Gb: 	16		
// Chip Selects used:	1		
// Number of Banks:	8		
// Row address:    	15		
// Column address: 	10		
// Data bus width	64		
//=============================================================================			
DATA 4, 0x021b0800, 0xa1390003 	// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.

// write leveling, based on Freescale board layout and T topology			
// For target board, may need to run write leveling calibration 			
// to fine tune these settings			
// If target board does not use T topology, then these registers			
// should either be cleared or write leveling calibration can be run			
DATA 4, 0x021b080c, 0x0013000E	
DATA 4, 0x021b0810, 0x001E000D	
DATA 4, 0x021b480c, 0x00040017	
DATA 4, 0x021b4810, 0x00080000	

//######################################################			
//calibration values based on calibration compare of 0x00ffff00:			
//Note, these calibration values are based on Freescale's board			
//May need to run calibration on target board to fine tune these 			
//######################################################			
			
//Read DQS Gating calibration			
DATA 4, 0x021b083c, 0x432C0334	// MPDGCTRL0 PHY0
DATA 4, 0x021b0840, 0x031C0324	// MPDGCTRL1 PHY0
DATA 4, 0x021b483c, 0x43240330	// MPDGCTRL0 PHY1
DATA 4, 0x021b4840, 0x031C026C	// MPDGCTRL1 PHY1

//Read calibration			
DATA 4, 0x021b0848, 0x3C303636	// MPRDDLCTL PHY0
DATA 4, 0x021b4848, 0x3A342E3E	// MPRDDLCTL PHY1
			
//Write calibration			
DATA 4, 0x021b0850, 0x3E3C4646	// MPWRDLCTL PHY0
DATA 4, 0x021b4850, 0x463E4A40	// MPWRDLCTL PHY1

//read data bit delay: (3 is the reccommended default value, although out of reset value is 0):			
DATA 4, 0x021b081c, 0x33333333	// DDR_PHY_P0_MPREDQBY0DL3
DATA 4, 0x021b0820, 0x33333333	// DDR_PHY_P0_MPREDQBY1DL3
DATA 4, 0x021b0824, 0x33333333	// DDR_PHY_P0_MPREDQBY2DL3
DATA 4, 0x021b0828, 0x33333333	// DDR_PHY_P0_MPREDQBY3DL3
DATA 4, 0x021b481c, 0x33333333	// DDR_PHY_P1_MPREDQBY0DL3
DATA 4, 0x021b4820, 0x33333333	// DDR_PHY_P1_MPREDQBY1DL3
DATA 4, 0x021b4824, 0x33333333	// DDR_PHY_P1_MPREDQBY2DL3
DATA 4, 0x021b4828, 0x33333333	// DDR_PHY_P1_MPREDQBY3DL3

DATA 4, 0x021b08c0, 0x24912489	// Recommended MMDC0_MPDCCR setting EB828
DATA 4, 0x021b48c0, 0x24914452	// Recommended MMDC1_MPDCCR setting EB828
			
// Complete calibration by forced measurement:			
DATA 4, 0x021b08b8, 0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr
DATA 4, 0x021b48b8, 0x00000800 	// DDR_PHY_P0_MPMUR0, frc_msr

//MMDC init:			
DATA 4, 0x021b0004, 0x00020036	// MMDC0_MDPDC 
DATA 4, 0x021b0008, 0x24444040	// MMDC0_MDOTC
DATA 4, 0x021b000c, 0x8A8F79A4	// MMDC0_MDCFG0
DATA 4, 0x021b0010, 0xDB530F64	// MMDC0_MDCFG1
DATA 4, 0x021b0014, 0x01FF00DD	// MMDC0_MDCFG2
DATA 4, 0x021b0018, 0x00001740	// MMDC0_MDMISC
//NOTE about MDMISC RALAT:			
//MDMISC: RALAT kept to the high level of 5 to ensure stable operation at 528MHz. 			
//MDMISC: consider reducing RALAT if your 528MHz board design allow that. Lower RALAT benefits: 			
//a. better operation at low frequency			
//b. Small performence improvment			
			
DATA 4, 0x021b001c, 0x00008000	// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4, 0x021b002c, 0x000026d2	// MMDC0_MDRWD; recommend to maintain the default values
DATA 4, 0x021b0030, 0x008F1023	// MMDC0_MDOR
DATA 4, 0x021b0040, 0x00000047	// CS0_END 
			
DATA 4, 0x021b0400, 0x14420000	// adopt bypass
			
DATA 4, 0x021b0000, 0x841A0000	// MMDC0_MDCTL
			
DATA 4, 0x021b0890, 0x00400C58	// MMDC0_MPPDCMPR2: ZQ_PU_OFFSET and ZQ_PD_OFFSET optimal settings

//########################################################			
//## NOC DDR configuration			
DATA 4, 0x00bb0008, 0x00000000	// NoC DDRCONF 
DATA 4, 0x00bb000c, 0x2871C39B	// NoC DDRTIMING according to MMDC0_MDCFG0/1/2
DATA 4, 0x00bb0038, 0x000005B6	// NoC Activate
DATA 4, 0x00bb0014, 0x00000040 	// NoC Read latency
DATA 4, 0x00bb0028, 0x00000020 	// NoC Aging control for IPU1/PRE0/PRE3
DATA 4, 0x00bb002c, 0x00000020 	// NoC Aging control for IPU2/PRE1/PRE2
DATA 4, 0x00BB0010, 0x00000000	// DDRMODE, contains extended MSB of BwRatio field, which is zero for 64- and 32-bit wide DDR memories.
//######################################################

// Mode register writes			
DATA 4, 0x021b001c, 0x04088032	// MMDC0_MDSCR, MR2 write, CS0
// DATA 4, 0x021b001c, 0x0408803A  // MMDC0_MDSCR, MR2 write, CS1

DATA 4, 0x021b001c, 0x00008033	// MMDC0_MDSCR, MR3 write, CS0
// DATA 4, 0x021b001c, 0x0000803B  // MMDC0_MDSCR, MR3 write, CS1

DATA 4, 0x021b001c, 0x00048031	// MMDC0_MDSCR, MR1 write, CS0
// DATA 4, 0x021b001c, 0x00048039  // MMDC0_MDSCR, MR1 write, CS1

DATA 4, 0x021b001c, 0x19308030	// MMDC0_MDSCR, MR0 write, CS0
// DATA 4, 0x021b001c, 0x19308038  // MMDC0_MDSCR, MR0 write, CS1

DATA 4, 0x021b001c, 0x04008040	// MMDC0_MDSCR, ZQ calibration command sent to device on CS0
// DATA 4, 0x021b001c, 0x04008048  // MMDC0_MDSCR, ZQ calibration command sent to device on CS1
			
			
DATA 4, 0x021b0020, 0x00005800	// MMDC0_MDREF

// It is recommended for new board designs and for customer boards			
// to program these registers to a value of "0x00011117" 			
// The DRAM ODT remains enabled and it is required to leave the DRAM ODT enabled
DATA 4, 0x021b0818, 0x00011117	// DDR_PHY_P0_MPODTCTRL
DATA 4, 0x021b4818, 0x00011117	// DDR_PHY_P1_MPODTCTRL
			
			
DATA 4, 0x021b0004, 0x00025576	// MMDC0_MDPDC with PWDT bits set
DATA 4, 0x021b0404, 0x00011006	// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
			
DATA 4, 0x021b001c, 0x00000000	// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)

/* set the default clock gate to save power */
DATA 4, 0x020c4068, 0x00C03F3F
DATA 4, 0x020c406c, 0x0030FC03
DATA 4, 0x020c4070, 0x0FFFC000
DATA 4, 0x020c4074, 0x3FF00000
DATA 4, 0x020c4078, 0x00FFF300
DATA 4, 0x020c407c, 0x0F0000F3
DATA 4, 0x020c4080, 0x000003FF

/* enable AXI cache for VDOA/VPU/IPU */
DATA 4, 0x020e0010, 0xF00000CF

/* set IPU AXI-id0 Qos=0xf(bypass) AXI-id1 Qos=0x7 */
/* set IPU AXI-id1 Qos=0x1 AXI-id0/2/3 Qos=0x7 */
DATA 4, 0x020e0018, 0x77177717
DATA 4, 0x020e001c, 0x77177717

#endif

